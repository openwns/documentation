###############################
IMT-A Channel Model calibration
###############################

In this chapter we will introduce how to use wrowser scenario viewer and how to setup a IMT-A scenario.

===================================
How to use wrowser to view scenario
===================================


.. note::

   Before starting this section, please refer to :ref:`gettingStartedWrowser` to install Wrowser and its plugins for playground.py.

Then use following command to start Wrowser.

.. code-block:: bash

   $ openwns-wrowser: wrowser

After wrowser started, ``sandbox path`` needs to be set up for wrowser first.
Go to ``Extra`` menu of wrowser and open ``Preferences``. Find ``Sandbox`` tab and fill in ``Sandboxpath`` with your sandbox path like ``myOpenWNS/sandbox``. Then click ``OK`` to save and close this Dialog window. 

Then goto ''File'' menu and start ''View Scenario''. In the open window find the config file. Here we use ``~/myOpenWNS/tests/system/ofdma-tests/configITUInH.py`` as an example. This is an Indoor Hotspot scenario with 2 base stations.

As show in the Figure :ref:`figure-scenarios-Wrowser-view-scenario1`:

.. _figure-scenarios-Wrowser-view-scenario1:

.. figure:: images/view-scenario1_InH.*
   :align: center

   Scenario viewer of a Indoor Hotspot scenario, picture 1

On the main window are positions of all base stations and user terminals. In this scenario there are two base stations and no user terminal. ``UE3`` in this figure is only a scan node which is generated by wrowser.

On the left part of this window click ``scan``.

After scan finished, click ``Map Plotting`` tap at left bottom. All the probes for PHY layer will be listed. Choose one of then and click ``Redraw``.

Figure :ref:`figure-scenarios-Wrowser-view-scenario2` shows an example:

.. _figure-scenarios-Wrowser-view-scenario2:

.. figure:: images/view-scenario2_s.*
   :align: center

   Example: Max Receiver Power for In door Hotspot scenario
=================================================
Example of OFDMA Scanner test of ITU UMa scenario
=================================================


Now ``configITUUMa.py`` in ``~/myOpenWNS/tests/system/ofdma-tests/`` will be taken as example.

.. code-block:: python

   #BS Creator
   self.sender = ofdmaphy.Station.Sender(self, "BS", [ofdmaphy.Transmitter.TransmitterDropIn()], centerFrequency)
   #UE Creator
   self.scanner = ofdmaphy.Station.Scanner(self, "UE" + str(self.nodeID), [ofdmaphy.Receiver.ReceiverDropIn()],  centerFrequency)

The codes above are from ``nocecreators.py`` in ``~/myOpenWNS/tests/system/ofdma-tests/``. Here ``ofdmaphy.Station.Sender`` is used as base station and ``ofdmaphy.Station.Scanner`` as user terminal.

.. code-block:: python

   import nodecreators
   import scenarios.builders
   import scenarios.ituM2135

   import openwns.geometry.position
   import rise.scenario.Propagation

   scenario = scenarios.builders.CreatorPlacerBuilderUrbanMacro(
       nodecreators.BSCreator("49.0 dBm", 2000.0), 
       nodecreators.UECreator(2000.0), 
       sectorization = True, 
       numberOfCircles = 1,
       numberOfNodes = 0)

   sm = openwns.simulator.getSimulator().rng.seed = 2714
   sm = openwns.simulator.getSimulator().simulationModel
   bsIDs = [node.nodeID for node in sm.getNodesByProperty("Type", "BS")]
   ueIDs = [node.nodeID for node in sm.getNodesByProperty("Type", "UE")]

   ueCreator = nodecreators.UECreator(2000.0)
   ue = ueCreator.create()
   ue.setPosition(openwns.geometry.position.Position(1000.0, 1000.0, 0.0))
   openwns.simulator.getSimulator().simulationModel.nodes.append(ue)

   for ue in  sm.getNodesByProperty("Type", "UE"):
       ue.mobility.mobility = scenarios.placer.hexagonal.createAreaScanMobility(50, 250.0, 25.0, openwns.geometry.position.Position(1000.0, 1000.0, 0.0), 0.0)

   import Probes
   Probes.installDefaultProbesUMa(openwns.simulator.getSimulator(), xrange(len(bsIDs)), 650.0, 1350.0, 650.0, 1350.0)

   openwns.simulator.getSimulator().maxSimTime = 1000.0
   openwns.simulator.getSimulator().outputStrategy = openwns.simulator.OutputStrategy.DELETE

   def plotMaps(simulator):
       import glob
       from scenarios.plotting.Plotting import *
       files = glob.glob("output/*.m")
       files = [f.replace(".m", "") for f in files]
       files = [f.split("_") for f in files]
       basefiles = []
       for f in files:
           f.remove(f[-1])
           basefiles.append("_".join(f))

       for f in basefiles:
           print "Creating png for %s" % f
           s = SingleMapCreator(f, 10, 1500.0, 1500.0, suffix=".m")
            plotMap(s)
       return True


In the codes presented above, ``scenarios.builders.CreatorPlacerBuilderUrbanMacro`` is used as creator placer builder. ``scenarios.builders.CreatorPlacerBuilderUrbanMacro`` is a child class of ``scenarios.builders.CreatorPlacerBuilder`` which is used in last chapter. Most parameters are pre-configurated according to Urban Macro (UMa) scenario model. In this scenario base station uses sectorization.  One circles of base stations(totally 7 base stations: 1 in the mittle and 6 around it with a hexagonal form) and 0 user terminal, as shown in Figure :ref:`figure-scenarios-IMT-A-UMa`.

.. _figure-scenarios-IMT-A-UMa:

.. figure:: images/IMT-A-UMa.*
   :align: center

   Station positions of a Urban Macro scenario

Other pre-configurated creator placer builders of ITM-A scenarios can be found under 'framework/scenarios/PyConfig/scenarios/ituM2135'.

