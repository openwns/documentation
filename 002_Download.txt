/**

@page download Download

@b Important: Before you actually start with the download make sure
your system has all the necessary software to install and run WNS: see
@ref prerequisites.

@b Note: This download instructions are a little bit longer than
others (e.g. where you just need to download a .tgz-file). But it pays
off as soon as you want to retrieve your first update. In the end the
download should not take more than 5 minutes (time for downloading not
included).

<b> Short version</b>:
@verbatim
bzr branch bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/openWNS--main--1.0 myOpenWNS
cd myOpenWNS
yes | ./playground.py upgrade
@endverbatim

@section download_configuring_tla Configuring Bazaar

Like many other software projects openWNS is available via a revision
control system. The system is called Bazaar.  Thus, in order to
download openWNS you need Bazaar. For most distributions (SuSE,
Debian, Ubuntu, ...) Bazaar is available as package. In any other case
you will need to build it from the sources available <a
href="http://bazaar-vcs.org/Download">here</a>.

To see if Bazaar is installed on your system and to check that you have
an up to date version you can try:

@verbatim
$ bzr --version
Bazaar (bzr) 0.92.0
...
@endverbatim

If you haven't used Bazaar before you need to make yourself known to the system:

@verbatim
$ bzr whoami "Joe Average <joe@average.com>"
@endverbatim

Your id should be your name, followed by your email address in angle
brackets. @c Bazaar records your id in the log messages for your
commits. This information will @em not be used at any point when
you're just downloading openWNS (like now). For futher information on
Bazaar you can have a look at <a
href="http://bazaar-vcs.org">http://http://bazaar-vcs.org</a>.

@section download_download Retrieve a copy of openWNS

Now it's time to retrieve a copy of openWNS. The following command will
checkout the current version of openWNS to 'myOpenWNS'. Choose
whatever you want as name. A good name is 'openWNS--main--1.0' ;-).

@verbatim
$ bzr branch bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/openWNS--main--1.0 myOpenWNS
Branched 73 revision(s).
$ cd myOpenWNS
@endverbatim

Now you have a local copy of openWNS. Well, not really. What you have
is rather an empty house. If you inspect all the sub-directories of @c
myLocalDirectory at this moment, you would notice that they are almost
all empty. Apart from some bash and Python scripts there is not much
to see. Especially no C++ source code below the directory @c
framwork.

@verbatim
$ cd myLocalDirectory
$ ls framework/

@endverbatim

So let's furnish this house! openWNS is designed to be a highly
modular simulation framework. Hence, it is made up of a number of
modules. Each module again is a Bazaar project (just like the one
you've just fetched). Normally you would have to fetch each Bazaar
project (or each module) by hand (like you did with this). This is
very tedious. Fortunately, there is a program that helps you with this
task (and other task as you will learn). It is called @c
playground.py. So to fetch all modules and necessary other data simply
enter:

@verbatim
$ ./playground.py upgrade
Warning: According to 'config/projects.py' the following directories are missing:
  ./tests/unit (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/unitTest--main--1.0)
  ./framework/cn-scons--main--1.0 (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/cn-scons--main--1.0)
  ./extern--main--1.0 (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/extern--main--1.0)
  ./WNS-Documentation--main--1.0 (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/WNS-Documentation--main--1.0)
  ./framework/libwns--main--1.0 (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/libwns--main--1.0)
  ./framework/openWNS-core--main--1.0 (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/openWNS-core--main--1.0)
  ./framework/PyWNS--main--1.0 (from URL: bzr://bazaar.comnets.rwth-aachen.de/openWNS/main/PyWNS--main--1.0)
Try fetch the according projects? (Y/n) y
@endverbatim

Just answer @c 'y' to this question and all necessary projects will be
fetched. Depending on your link speed and the current size of openWNS this
can take several minutes.

After the download has finished you have all pieces available to
proceed with the @ref installation of openWNS. Now there should be the
framework available:

@verbatim
$ ls framwork/*
buildSupport@
cn-scons--main--1.0/
libwns--main--1.0/
openWNS-core--main--1.0/
PyWNS--main--1.0/
@endverbatim

*/
